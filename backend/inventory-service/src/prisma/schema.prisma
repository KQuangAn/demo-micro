generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model currencies {
  id   String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name String @unique @db.VarChar(3)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  prices prices[]
}

model inventory {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String   @db.VarChar(255)
  brand       String   @db.VarChar(255)
  description String
  images      String[]
  categories  String[]
  quantity    Int
  discount    Float
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @map("updated_at") @db.Timestamp(6)
  prices      prices[]
}

model prices {
  id         String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  productId  String    @map("product_id") @db.Uuid
  currencyId String    @map("currency_id") @db.Uuid
  price      Decimal   @db.Decimal
  startDate  DateTime? @default(now()) @map("start_date") @db.Timestamp(6)
  endDate    DateTime? @map("end_date") @db.Timestamp(6)

  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @default(now()) @map("updated_at") @db.Timestamp(6)

  currencies currencies @relation(fields: [currencyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  inventory  inventory  @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
