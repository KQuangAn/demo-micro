package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.72

import (
	"context"
	"orderservice/graph/model"
	"time"

	"github.com/google/uuid"
)

// UpdateOrderDetail is the resolver for the updateOrderDetail field.
func (r *mutationResolver) UpdateOrderDetail(ctx context.Context, orderDetailID uuid.UUID, quantity *int32, status *model.OrderDetailStatus) (*model.OrderDetail, error) {
	return r.OrderService.UpdateOrderDetail(ctx, orderDetailID, quantity, status)
}

// CancelOrder is the resolver for the cancelOrder field.
func (r *mutationResolver) CancelOrder(ctx context.Context, id uuid.UUID) (*model.Order, error) {
	return r.OrderService.CancelOrder(ctx, id)
}

// GetOrdersByUserID is the resolver for the getOrdersByUserId field.
func (r *queryResolver) GetOrdersByUserID(ctx context.Context, userID uuid.UUID, first *int32, after *time.Time) (*model.OrderConnection, error) {
	return r.OrderService.GetOrdersByUserId(ctx, userID, first, after)
}

// GetOrderDetailsByOrderID is the resolver for the getOrderDetailsByOrderId field.
func (r *queryResolver) GetOrderDetailsByOrderID(ctx context.Context, orderID uuid.UUID, first *int32, after *time.Time) (*model.OrderDetailConnection, error) {
	return r.OrderService.GetOrdersDetailByOrderId(ctx, orderID, first, after)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
