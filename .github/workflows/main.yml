name: Demo micro CI

permissions:
  id-token: write
  contents: read
  actions: read
  issues: read
  checks: write
  pull-requests: write

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - 'master'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: false

env:
  AWS_REGION: ap-southeast-2
  AWS_MGMT_ACCOUNT_ID: ''
  AWS_ROLE_NAME: InfraDeployAccess
  AWS_OIDC_ROLE: github-oidc-deployer

jobs:
  changes:
    name: Detect Changed Paths
    runs-on: ubuntu-latest
    outputs:
      pipeline: ${{ steps.filter.outputs.pipeline }}
      backend: ${{ steps.filter.outputs.backend }}
      application_form: ${{ steps.filter.outputs.application_form }}
      customer_connect: ${{ steps.filter.outputs.customer_connect }}
      schema_validation: ${{ steps.filter.outputs.schema_validation }}
      document_upload: ${{ steps.filter.outputs.document_upload }}
    steps:
      - uses: actions/checkout@v3

      - name: Filter paths
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            pipeline:
              - '.github/workflows/**'
            api-gateway:
              - 'backend/api-gateway/**'
            inventory-service:
              - 'backend/inventory-service/**'
            notification-service:
              - 'backend/notification-service/**'
            order-service:
              - 'backend/order-service/**'
            frontend_dashboard:
              - 'frontend/apps/dashboard/**'
            frontend_products :
              - 'frontend/apps/product/**'

  backend_deployment:
    name: Backend Deployment
    needs: [changes]
    if: needs.changes.outputs.api-gateway == 'true' || needs.changes.outputs.pipeline == 'true' || needs.changes.outputs.inventory-service == 'true' || needs.changes.outputs.pipeline == 'true' || needs.changes.outputs.notification-service == 'true'
    uses: './.github/workflows/backend_deployment.yml'
    with:
      project_name: customer-app
    secrets:
      sonar_token: ${{ secrets.SONAR_TOKEN }}
      npm_token: ${{ secrets.NPM_TOKEN }}
      WIZ_CliENT_ID: ${{ secrets.WIZ_CLIENT_ID }}
      WIZ_CLIENT_SECRET: ${{ secrets.WIZ_CLIENT_SECRET }}

  frontend_deployment:
    name: Application Form Frontend Deployment
    needs: [changes]
    if: needs.changes.outputs.application_form == 'true' || needs.changes.outputs.pipeline == 'true' || needs.changes.outputs.schema_validation == 'true' || needs.changes.outputs.form_components == 'true'
    uses: './.github/workflows/frontend_cicd.yml'
    with:
      project_name: application-form
    secrets:
      sonar_token: ${{ secrets.SONAR_TOKEN }}
      npm_token: ${{ secrets.NPM_TOKEN }}
      STAGING_AUTH_CLIENT_ID: ${{ secrets.STAGING_AUTH_CLIENT_ID }}
      STAGING_AUTH_DOMAIN: ${{ secrets.STAGING_AUTH_DOMAIN }}
      STAGING_LAUNCHDARKLY_CLIENT_ID: ${{ secrets.STAGING_LAUNCHDARKLY_CLIENT_ID }}
      STAGING_SEGMENT_WRITEKEY: ${{ secrets.STAGING_SEGMENT_WRITE_KEY }}
      STAGING_DISTRIBUTION_ID: ${{ secrets.STAGING_DISTRIBUTION_ID }}
      STAGING_S3_BUCKET: ${{ secrets.STAGING_S3_BUCKET }}
      UAT_AUTH_CLIENT_ID: ${{ secrets.UAT_AUTH_CLIENT_ID }}
      UAT_AUTH_DOMAIN: ${{ secrets.UAT_AUTH_DOMAIN }}
      UAT_LAUNCHDARKLY_CLIENT_ID: ${{ secrets.UAT_LAUNCHDARKLY_CLIENT_ID }}
      UAT_SEGMENT_WRITEKEY: ${{ secrets.UAT_SEGMENT_WRITE_KEY }}
      UAT_DISTRIBUTION_ID: ${{ secrets.UAT_DISTRIBUTION_ID }}
      UAT_S3_BUCKET: ${{ secrets.UAT_S3_BUCKET }}
      PROD_AUTH_CLIENT_ID: ${{ secrets.PROD_AUTH_CLIENT_ID }}
      PROD_AUTH_DOMAIN: ${{ secrets.PROD_AUTH_DOMAIN }}
      PROD_LAUNCHDARKLY_CLIENT_ID: ${{ secrets.PROD_LAUNCHDARKLY_CLIENT_ID }}
      PROD_SEGMENT_WRITEKEY: ${{ secrets.PROD_SEGMENT_WRITE_KEY }}
      PROD_DISTRIBUTION_ID: ${{ secrets.PROD_DISTRIBUTION_ID }}
      PROD_S3_BUCKET: ${{ secrets.PROD_S3_BUCKET }}
      DATADOG_RUM_APPLICATION_ID: ${{ secrets.DATADOG_RUM_APPLICATION_ID }}
      DATADOG_RUM_CLIENT_TOKEN: ${{ secrets.DATADOG_RUM_CLIENT_TOKEN }}
      HYGRAPH_TOKEN: ${{ secrets.HYGRAPH_TOKEN }}
      HYGRAPH_URL: ${{ secrets.HYGRAPH_URL }}
